apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        packagingOptions {
            exclude 'META-INF/rxjava.properties'
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        //bugly 设置支持的SO库架构
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }

        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // 自定义输出配置，格式：版本名称 + 版本号 + 渠道名称(如果不用渠道打包，可以去掉) + 时间
//            applicationVariants.all { variant ->
//                variant.outputs.each { output ->
//                    def outputFile = output.outputFile
//                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                        def date = Calendar.getInstance();
//                        def timeStr = "_" + date.get(Calendar.YEAR) + (((date.get(Calendar.MONTH) + 1) >= 10 ? date.get(Calendar.MONTH) + 1 : "0" + (date.get(Calendar.MONTH) + 1))) + (date.get(Calendar.DAY_OF_MONTH) >= 10 ? date.get(Calendar.DAY_OF_MONTH) : "0" + date.get(Calendar.DAY_OF_MONTH)) + "_" + (date.get(Calendar.HOUR_OF_DAY) >= 10 ? date.get(Calendar.HOUR_OF_DAY) : "0" + date.get(Calendar.HOUR_OF_DAY)) + (date.get(Calendar.MINUTE) >= 10 ? date.get(Calendar.MINUTE) : "0" + date.get(Calendar.MINUTE)) + ".apk";
//                        def fileName = "Android_${defaultConfig.versionName}_${defaultConfig.versionCode}_${variant.productFlavors[0].name}" + timeStr;
//                        output.outputFile = new File(outputFile.parent, fileName)
//                    }
//                }
//            }
        }
    }

    lintOptions{
        checkReleaseBuilds false
        abortOnError false
        //关闭检索的功能
        disable 'GoogleAppIndexingWarning'
        baseline file("lint-baseline.xml")
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
//            res.srcDirs += ['res_extends']
            res.srcDirs = [
                    //默认只有这一个路径
                    'src/main/res',
                    //声明gradle在编译的时候到这个文件夹找资源文件
                    'src/main/res_firenews'
            ]

        }
    }

    /*Umeng配置渠道*/
    flavorDimensions "default"
    productFlavors {
        tongjibao{
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "tongjibao"]
        }
    }

    dependencies {
        implementation fileTree(include: ['*.jar'], dir: 'libs')
        testImplementation rootProject.ext.dependencies["junit"]
        androidTestImplementation rootProject.ext.dependencies["runner"]
        androidTestImplementation rootProject.ext.dependencies["espresso-core"]
        //support
        implementation rootProject.ext.dependencies["constraint-layout"]
        implementation rootProject.ext.dependencies["appcompat-v7"]
        implementation rootProject.ext.dependencies["recyclerview"]
        implementation rootProject.ext.dependencies["xrecyclerview"]
        implementation rootProject.ext.dependencies["design"]
        implementation rootProject.ext.dependencies["cardview"]
        //butterknife
        implementation rootProject.ext.dependencies["butterknife"]
        annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
        //AutoDispose解决RxJava内存泄漏
        implementation rootProject.ext.dependencies["autodispose"]
        implementation rootProject.ext.dependencies["autodispose-android"]
        implementation rootProject.ext.dependencies["autodispose-android-archcomponents"]
        //rxjava
        implementation rootProject.ext.dependencies["reactivex-rxjava"]
        implementation rootProject.ext.dependencies["reactivex-rxandroid"]
        //Retrofit2.0
        implementation rootProject.ext.dependencies["retrofit"]
        implementation rootProject.ext.dependencies["rxandroid"]
        implementation rootProject.ext.dependencies["adapter-rxjava2"]
        implementation rootProject.ext.dependencies["converter-gson"]
        implementation rootProject.ext.dependencies["okhttp"]
        implementation rootProject.ext.dependencies["logging-interceptor"]
        //FlycoTabLayout_Lib
        implementation rootProject.ext.dependencies["tablayout"]
        //沉浸式状态栏
        implementation rootProject.ext.dependencies["statusbarutil"]
        //Glide/Fresco
        implementation rootProject.ext.dependencies["glide_361"]
        implementation rootProject.ext.dependencies["fresco"]
        annotationProcessor rootProject.ext.dependencies["glide_compiler"]
        //eventbus
        implementation rootProject.ext.dependencies["androideventbus"]
//    implementation 'org.greenrobot:eventbus:3.0.0'
        //banner
        implementation rootProject.ext.dependencies["banner"]
        //MagicIndicator
        implementation rootProject.ext.dependencies["MagicIndicator"]
        //SwipeToLoadLayout
        implementation rootProject.ext.dependencies["SwipeToLoadLayout"]
        //videoplayer
        implementation rootProject.ext.dependencies["jiaozivideoplayer"]
        //渲染After Effects动画的工具
        implementation rootProject.ext.dependencies["lottie"]
        //ViewAnimator
        implementation rootProject.ext.dependencies["viewanimator"]
        implementation rootProject.ext.dependencies["rxlifecycle2"]
        implementation rootProject.ext.dependencies["rxlifecomponents"]
        implementation rootProject.ext.dependencies["fragmentation"]
        implementation rootProject.ext.dependencies["ultra-ptr"]
        //dialog
        implementation rootProject.ext.dependencies["FlycoDialog"]
        implementation rootProject.ext.dependencies["roundedimageview"]
        implementation rootProject.ext.dependencies["swipebacklayout"]
        implementation rootProject.ext.dependencies["PhotoView"]
        implementation rootProject.ext.dependencies["systembartint"]
        implementation rootProject.ext.dependencies["ijkplayer-java"]
        implementation rootProject.ext.dependencies["videocache"]
        //1.1.0 （1.0.5及以前版本的老用户升级需谨慎，API改动过大）
        implementation rootProject.ext.dependencies["SmartRefreshLayout"]
        //流式布局
//        implementation rootProject.ext.dependencies["flowlayout"]
        implementation project(':CygPtr')
        //compile 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-alpha-29'//没有使用特殊Header，可以不加这行
        //1.1.0 androidx 版本
        //implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-andx-12'
        //implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-andx-12'
        //implementation 'androidx.legacy:legacy-support-v4:1.0.0'
        //implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'

        //统计
//        implementation rootProject.ext.dependencies["bugly_crashreport"]
//        implementation rootProject.ext.dependencies["bugly_nativecrashreport"]
        implementation rootProject.ext.dependencies["umeng_sdk"]
        implementation rootProject.ext.dependencies["umeng_analytics"]
        implementation(name: 'base_quick_adpter', ext: 'aar')

        implementation 'com.android.support:multidex:1.0.3'

        //注释掉原有bugly的仓库
        //compile 'com.tencent.bugly:crashreport:latest.release'//其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.3.2
        implementation 'com.tencent.bugly:crashreport_upgrade:latest.release'//其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.2.0
//    implementation 'com.tencent.bugly:nativecrashreport:latest.release' //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0




    }
}

